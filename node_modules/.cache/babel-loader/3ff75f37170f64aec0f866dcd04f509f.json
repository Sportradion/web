{"ast":null,"code":"'use strict';\n\nvar toDataView = require('to-data-view');\n/**\n * Check the ArrayBuffer is valid ICO.\n *\n * @alias module:ICO\n * @param {ArrayBuffer|Buffer} source - ICO file data.\n * @returns {boolean} True if arg is ICO.\n */\n\n\nvar isICO = function isICO(source) {\n  var dataView = toDataView(source);\n  return dataView.getUint16(0, true) === 0 && dataView.getUint16(2, true) === 1;\n};\n\nmodule.exports = isICO;","map":{"version":3,"sources":["/Users/carlleandersson/web/node_modules/icojs/src/is-ico.js"],"names":["toDataView","require","isICO","source","dataView","getUint16","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;AAEA;;;;;;;;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,MAAM,EAAI;AACtB,MAAMC,QAAQ,GAAGJ,UAAU,CAACG,MAAD,CAA3B;AACA,SAAOC,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsB,IAAtB,MAAgC,CAAhC,IAAqCD,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsB,IAAtB,MAAgC,CAA5E;AACD,CAHD;;AAKAC,MAAM,CAACC,OAAP,GAAiBL,KAAjB","sourcesContent":["'use strict';\n\nconst toDataView = require('to-data-view');\n\n/**\n * Check the ArrayBuffer is valid ICO.\n *\n * @alias module:ICO\n * @param {ArrayBuffer|Buffer} source - ICO file data.\n * @returns {boolean} True if arg is ICO.\n */\nconst isICO = source => {\n  const dataView = toDataView(source);\n  return dataView.getUint16(0, true) === 0 && dataView.getUint16(2, true) === 1;\n};\n\nmodule.exports = isICO;\n"]},"metadata":{},"sourceType":"script"}